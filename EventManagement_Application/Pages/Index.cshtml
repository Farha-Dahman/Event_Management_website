@page
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<section id="heroCarousel" class="carousel slide" data-bs-ride="carousel">
    <!-- Carousel Indicators -->
    <div class="carousel-indicators">
        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="2" aria-label="Slide 3"></button>
    </div>

    <!-- Carousel Items -->
    <div class="carousel-inner">
        <!-- First Slide -->
        <div class="carousel-item active">
            <div class="d-flex align-items-center bg-image first-slide justify-content-center text-center text-white bg-dark" style="height: 80vh;">
                <div>
                    <h1 class="display-3 fw-bold">Welcome to Eventify</h1>
                    <p class="lead">Discover the hottest events near you!</p>
                    @* <a href="./Identity/Account/Register" class="btn btn-outline-light bg-btn btn-lg">Get started for free</a> *@
                    <a href="./Identity/Account/Register" class="btn btn-outline-light bg-btn btn-lg"
                       style="@(SignInManager.IsSignedIn(User) ? "display: none;" : "")">
                        Get started for free
                    </a>

                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if (User.IsInRole("Organizer"))
                        {
                            <a href="/Organizer/Events/Create" class="btn btn-outline-light bg-btn btn-lg">Create Your Event</a>
                        }
                        else
                        {
                            <button type="button" class="btn btn-outline-light bg-btn btn-lg" id="requestAccessButton">
                                Request to be an Organizer
                            </button>
                        }
                    }
                    <a href="/Attendee/ViewEvents" class="btn btn-outline-light btn-lg">View Latest Event</a>
                </div>
            </div>
        </div>

        <!-- Second Slide -->
        <div class="carousel-item">
            <div class="d-flex align-items-center second-slide justify-content-center text-center text-white bg-primary" style="height: 80vh;">
                <div>
                    <h1 class="display-3 fw-bold">Join, Explore & Connect</h1>
                    <p class="lead">Stay updated and never miss out on amazing events.</p>
                </div>
            </div>
        </div>

        <!-- Third Slide -->
        <div class="carousel-item">
            <div class="d-flex align-items-center third-slide justify-content-center text-center text-white bg-secondary" style="height: 80vh;">
                <div>
                    <h1 class="display-3 fw-bold">Your Next Event Awaits</h1>
                    <p class="lead">Create, share, and manage events with ease!</p>
                    <a href="/Attendee/ViewEvents" class="btn btn-outline-light btn-lg">Explore Events</a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- About Section -->
<div class="container text-center my-2 pt-5 about-section">
    <h2 class="mb-4 section-title">WHY EVENTIFY?</h2>
    <p class="lead">
        Eventify is your one-stop platform to explore, organize, and manage events seamlessly.
        Stay connected and experience unforgettable moments!
    </p>

    <div class="row mt-5 pt-3">
        <div class="col-md-4">
            <div class="feature-card p-4">
                <i class="fa-solid fa-calendar-check feature-icon mb-3 p-3 rounded-circle"></i>
                <h5>Easy Event Management</h5>
                <p>Create, edit, and track events with a few clicks.</p>
            </div>
        </div>
        <div class="col-md-4">
            <div class="feature-card p-4">
                <i class="fa-solid fa-ticket-alt feature-icon mb-3 p-3 rounded-circle"></i>
                <h5>Hassle-Free Ticketing</h5>
                <p>Sell tickets online and manage check-ins effortlessly.</p>
            </div>
        </div>
        <div class="col-md-4">
            <div class="feature-card p-4">
                <i class="fa-solid fa-users feature-icon mb-3 p-3 rounded-circle"></i>
                <h5>Connect With Attendees</h5>
                <p>Engage with participants and grow your network.</p>
            </div>
        </div>
    </div>
</div>

<!-- Upcoming Events Section -->
<section class="upcoming-events">
    <div class="container">
        <!-- Section Header -->
        <div class="section-header">
            <h2 class="section-title">Upcoming Events</h2>
            <p class="section-subtitle">Explore our exciting lineup of events. Don’t miss out!</p>
            <a href="./Attendee/ViewEvents" class="view-all-btn">
                View All Events <i class="fa-solid fa-arrow-right"></i>
            </a>
        </div>

        <!-- Events Carousel -->
        <div class="events-carousel owl-carousel owl-theme">
            @{
                var upcomingEvents = Model.UpcomingEvents
                .Where(e => e.EventDate > DateTime.Now) // Only future events
                .OrderBy(e => e.EventDate) // Earliest first
                .Take(8) // Limit to 8 upcoming events (2 rows x 4 columns)
                .ToList();
            }

            <div class="events-grid">
                @foreach (var eventItem in upcomingEvents)
                {
                    <a href="/Attendee/EventDetails?eventId=@eventItem.Id" class="event-card-link">
                        <div class="event-card mt-1">
                            <!-- Event Image -->
                            <div class="event-image">
                                <img src="@(eventItem.EventImage != null ? "data:image/jpeg;base64," + Convert.ToBase64String(eventItem.EventImage) : "/images/default-image.jpg")"
                                     alt="Event Image">
                                <div class="event-date">
                                    <span class="day">@eventItem.EventDate.ToString("dd")</span>
                                    <span class="month">@eventItem.EventDate.ToString("MMM")</span>
                                </div>
                            </div>

                            <!-- Event Details -->
                            <div class="event-content">
                                <h3 class="event-title">@eventItem.Title</h3>
                                <p class="event-category">@eventItem.Category</p>
                                <p class="event-location"><i class="fa-solid fa-map-marker-alt"></i> @eventItem.Location</p>
                                @* <a href="#" class="event-button text-center">Learn More</a> *@
                            </div>
                        </div>
                    </a>
                }
            </div>
        </div>

    </div>
</section>

<!-- Features Section -->
<section class="features-section py-4">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h2 class="fw-bold text-dark">Powerful Event Management</h2>
                <p class="text-muted pb-5">Manage, discover, and sell tickets for events seamlessly.</p>
                <div class="d-flex align-items-start mb-4">
                    <i class="fa-regular fa-calendar feature-icon p-3 rounded-circle me-4"></i>
                    <div>
                        <h5 class="fw-bold">Event Management</h5>
                        <p class="text-muted">Create, manage, and track events with powerful tools.</p>
                    </div>
                </div>
                <div class="d-flex align-items-start mb-4">
                    <i class="fa-solid fa-list-check feature-icon p-3 rounded-circle me-4"></i>
                    <div>
                        <h5 class="fw-bold">Event Discovery</h5>
                        <p class="text-muted">Find exciting events based on your interests.</p>
                    </div>
                </div>
                <div class="d-flex align-items-start">
                    <i class="fa-solid fa-ticket feature-icon p-3 rounded-circle me-4"></i>
                    <div>
                        <h5 class="fw-bold">Seamless Ticketing</h5>
                        <p class="text-muted">E-tickets with QR codes for easy access.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6 text-center">
                <img src="~/images/management-office.svg" alt="Event Management Image" class="img-fluid rounded shadow">
            </div>
        </div>
    </div>
</section>

<!-- Companies Section -->
<div class="container my-5 py-5">
    <section class="row justify-content-center align-items-center text-center g-4">
        <div class="col-6 col-md-4 col-lg-2">
            <img src="~/images/Google.svg" alt="Google" class="img-fluid brand-logo">
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <img src="~/images/Microsoft.svg" alt="Microsoft" class="img-fluid brand-logo">
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <img src="~/images/Spotify.svg" alt="Spotify" class="img-fluid brand-logo">
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <img src="~/images/Mailchimp.svg" alt="Mailchimp" class="img-fluid brand-logo">
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <img src="~/images/Airbnb.svg" alt="Airbnb" class="img-fluid brand-logo">
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <img src="~/images/uber.svg" alt="uber" class="img-fluid brand-logo">
        </div>
    </section>
</div>

<!-- Past Events Section -->
<div id="eventCarousel" class="latest-events-section carousel slide py-5" data-bs-ride="carousel">
    <div class="container">
        <div class="d-flex justify-content-center align-items-center mb-4">
            <div class="text-center">
                <h2 class="section-title">Our Past Events</h2>
                <p class="section-subtitle">Stay updated with the newest events happening around you!</p>
            </div>
        </div>
        <a href="./Attendee/ViewEvents" class="clr-text align-items-end justify-content-end d-flex text-decoration-none fw-bold py-1">
            Show More <i class="fa-solid fa-arrow-right px-3 mb-1"></i>
        </a>
    </div>

    <!-- Carousel Inner -->
    <div class="carousel-inner">
        @{
            var chunkSize = 4; // Show 4 events per slide

            var pastTwoMonthsEvents = Model.LatestEvents
            .Where(e => e.EventDate < DateTime.Now) // Ensure only past events are shown
            .OrderByDescending(e => e.EventDate) // Sort by most recent past event
            .Take(8) // Fetch last 8 past events
            .Select((x, i) => new { x, i })
            .GroupBy(x => x.i / chunkSize)
            .Select(g => g.Select(v => v.x).ToList())
            .ToList();
        }

        @if (pastTwoMonthsEvents.Any())
        {
            @for (int i = 0; i < pastTwoMonthsEvents.Count; i++)
            {
                <div class="carousel-item @(i == 0 ? "active" : "")">
                    <div class="container">
                        <div class="row g-3">
                            @foreach (var eventItem in pastTwoMonthsEvents[i])
                            {
                                <div class="col-md-3 p-2">
                                    <div class="card border-0" onclick="goToEventDetails('@eventItem.Id')" style="cursor: pointer;">
                                        <img src="@(eventItem.EventImage != null ? "data:image/jpeg;base64," + Convert.ToBase64String(eventItem.EventImage) : "/images/default-image.jpg")"
                                             class="card-img-top"
                                             alt="Event Image">
                                        <div class="card-body text-start">
                                            <h5 class="card-title fw-bold">@eventItem.Title</h5>
                                            <p class="text-muted small">@eventItem.Category</p>
                                            <p><i class="fa-solid event-date-icon me-1 fa-calendar"></i> @eventItem.EventDate.ToString("yyyy-MM-dd HH:mm")</p>
                                            <p><i class="fa-solid secondary-color me-1 fa-map-marker-alt"></i> @eventItem.Location</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-center text-muted">No past events found in the last two months.</p>
        }
    </div>

    <!-- Carousel Controls -->
    <button class="carousel-control-prev" type="button" data-bs-target="#eventCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon rounded-circle" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#eventCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon rounded-circle" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<!-- Feedback & Ratings Section -->
<section class="feedback-section py-5">
    <div class="container">
        <h2 class="text-center fw-bold mb-4">What is everyone saying?</h2>
        <p class="text-center text-muted mb-4">See what attendees are saying about our events.</p>

        <!-- Carousel -->
        <div id="feedbackCarousel" class="carousel slide p-2" data-bs-ride="carousel">
            <div class="carousel-inner p-2">
                @for (int i = 0; i < Model.RecentFeedbacks.Count && i < 6; i += 3)
                {
                    <div class="carousel-item @(i == 0 ? "active" : "")">
                        <div class="row justify-content-center">
                            @for (int j = i; j < i + 3 && j < Model.RecentFeedbacks.Count; j++)
                            {
                                var feedback = Model.RecentFeedbacks[j];
                                <div class="col-md-4">
                                    <div class="card feedback-card shadow-sm p-3">
                                        <div class="d-flex flex-column align-items-center text-center">
                                            @{
                                                var defaultImagePath = Url.Content("~/images/profilePicture.jpg");
                                            }

                                            <!-- Display feedback user's avatar or default avatar if not available -->
                                            <img src="@(feedback.UserAvatar != null ? feedback.UserAvatar : defaultImagePath)"
                                                 class="rounded-circle mb-3"
                                                 width="80"
                                                 height="80"
                                                 alt="User Avatar">

                                            <!-- Stars -->
                                            <div class="stars mb-2">
                                                @for (int k = 1; k <= 5; k++)
                                                {
                                                    <i class="fa-solid fa-star @(k <= feedback.Rating ? "text-warning" : "text-muted")"></i>
                                                }
                                            </div>

                                            <p class="mt-2 text-muted">"@feedback.Comment"</p>
                                            <p class="text-muted small">@feedback.UserName</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Feedback Submission Button -->
        @if (User.Identity.IsAuthenticated)
        {
            <div class="text-center mt-5">
                <a href="/Attendee/Feedback" class="btn bg-primary-color text-white">Leave Your Feedback</a>
            </div>
        }
        else
        {
            <div class="text-center mt-5">
                <a href="/Identity/Account/Login" class="btn bg-primary-color text-white">Log in to Leave Feedback</a>
            </div>
        }
    </div>
</section>

@if (SignInManager.IsSignedIn(User) && !User.IsInRole("Organizer"))
{
    <section class="become-organizer-section text-center pb-5">
        <div class="container">
            <h2 class="fw-bold py-3 clr-text">Become an Event Organizer</h2>
            <p class="text-muted">
                Want to host your own events? Request to become an organizer and start creating events today!
            </p>
            <button type="button" class="btn bg-primary-color rounded-1 text-white fw-bold btn-lg" id="requestAccessButton">
                Request Access
            </button>
        </div>
        <hr class="mt-5 w-25 d-inline-grid" />
    </section>

    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmRequestModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Request</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to request access as an event organizer?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form method="post" id="requestForm">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn bg-primary-color text-white">Yes, Request</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<!-- Contact Section -->
<section class="contact-section p-3 pb-5">
    <div class="container">
        <div class="row align-items-center">
            <!-- Left Side: Image -->
            <div class="col-md-6 col-sm-12">
                <img src="~/images/Messages-amico.svg" alt="Contact Us" class="img-fluid w-75">
            </div>

            <!-- Right Side: Contact Form -->
            <div class="col-md-6">
                <h2>Contact Us</h2>
                <form id="contactForm" method="POST" asp-page-handler="Contact">
                    <div class="mb-3">
                        <label for="subject" class="form-label">Subject</label>
                        <input type="text" class="form-control" id="subject" name="subject" asp-for="ContactForm.Subject" required>
                    </div>
                    <div class="mb-3">
                        <label for="message" class="form-label">Message</label>
                        <textarea class="form-control" id="message" name="message" asp-for="ContactForm.Message" rows="4" required></textarea>
                    </div>
                    <button type="submit" class="btn bg-primary-color text-white">Submit</button>
                </form>
            </div>
        </div>
    </div>
</section>

<script>     
    document.getElementById("requestAccessButton").addEventListener("click", function () {
        var confirmModal = new bootstrap.Modal(document.getElementById("confirmRequestModal"));
         confirmModal.show();
     });
     function isInView(element) {
         const rect = element.getBoundingClientRect();
         return rect.top >= 0 && rect.bottom <= window.innerHeight;
     }

     // Trigger the transition when the section is in view
     document.addEventListener('scroll', () => {
         const section = document.querySelector('.features-section');
        if (isInView(section)) {
            section.classList.add('show');
         }
     });
    $(document).ready(function(){
        $(".events-carousel").owlCarousel({
            loop: true,
            margin: 20,
            nav: true,
            dots: false,
            autoplay: true,
            autoplayTimeout: 5000,
            responsive: {
                0: {
                    items: 1
                },
                768: {
                    items: 2
                },
                992: {
                    items: 3
                }
            }
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const form = document.getElementById("contactForm");

        form.addEventListener("submit", function(event) {
            event.preventDefault();  // Prevent default form submission

            const formData = new FormData(form);

            // Send the form data via AJAX (fetch)
            fetch(form.action, {
                method: "POST",
                body: formData
            })
            .then(response => response.json())  // Assuming server returns JSON
            .then(data => {
                if (data.success) {
                    // Reset the form after successful submission
                    form.reset();

                    // Optionally show a success message or alert
                    alert("Your message has been sent!");
                } else {
                    alert("There was an issue sending your message.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
                alert("An error occurred. Please try again.");
            });
        });
    });
</script>

<script>
    function goToEventDetails(eventId) {
    window.location.href = `/Attendee/EventDetails?eventId=${eventId}`;
    }
</script>