@page
@model EventManagement_Application.Pages.Organizer.Events.IndexModel
@{
    ViewData["Title"] = "Events";
}


<!-- Create New Event Button at the Top -->
<div class="d-flex justify-content-between mt-3 mb-3">
    <h1 class="clr-text py-2">Your Events</h1>
    <a asp-page="./Create" class="btn bg-primary-color text-white my-3">
        <i class="fas fa-plus-circle text-white me-1"></i> Create New Event
    </a>
</div>

<!-- Search and Filter Form -->
<div class="border-1 search-form rounded-1 w-100">
    <form method="get" class="mb-4 w-100 container">
        <div class="row g-3 justify-content-center align-items-end">
            <!-- Search by Category or Location -->
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text bg-light border-end-0">
                        <i class="fa fa-search"></i>
                    </span>
                    <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control border-start-0" placeholder="Search by category or location">
                </div>
            </div>

            <!-- Search by Date -->
            <div class="col-md-3">
                <div class="input-group">
                    <input type="date" name="SearchDate" value="@Model.SearchDate?.ToString("yyyy-MM-dd")" class="form-control">
                    <span class="input-group-text bg-light">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
            </div>

            <!-- Filter Button -->
            <div class="col-md-2">
                <button type="button" class="btn btn-outline-secondary w-100" onclick="toggleFilters()">
                    <i class="fa-solid fa-filter me-2"></i>Filter
                </button>
            </div>

            <!-- Search Button -->
            <div class="col-md-2">
                <button type="submit" class="btn bg-primary-color text-white w-100">
                    <i class="fa fa-search me-2"></i>Search
                </button>
            </div>
        </div>

        <!-- Filter Options (Initially Hidden) -->
        <div id="filterOptions" class="mt-3 p-4 border rounded bg-light" style="display: none;">
            <div class="row g-3">
                <!-- Ticket Type Filter -->
                <div class="col-md-6">
                    <label for="ticketType" class="form-label">Ticket Type</label>
                    <select id="ticketType" name="SelectedTicketType" class="form-select">
                        <option value="">Select Ticket Type</option>
                        @foreach (var ticketType in Model.TicketTypes)
                        {
                            <option value="@ticketType">@ticketType</option>
                        }
                    </select>
                </div>

                <!-- Event Mode Filter -->
                <div class="col-md-6">
                    <label for="eventMode" class="form-label">Event Mode</label>
                    <select id="eventMode" name="SelectedMode" class="form-select">
                        <option value="">Select Event Mode</option>
                        <option value="Online">Online</option>
                        <option value="InPerson">In-person</option>
                    </select>
                </div>

                <!-- Done and Cancel Buttons -->
                <div class="col-12 text-end">
                    <button type="submit" class="btn bg-primary-color text-white me-2">Apply Filters</button>
                    <button type="button" class="btn btn-secondary" onclick="resetFilters()">Reset Filters</button>
                </div>
            </div>
        </div>
    </form>
</div>
<!-- Events Grid -->
<div class="row row-cols-1 g-4 py-5">
    @foreach (var eventItem in Model.Events)
    {
        <div class="col">
            <div class="card event-card shadow border-0 overflow-visible d-flex flex-row align-items-stretch position-relative"
                 onclick="window.location.href='/Organizer/Events/Details?id=@eventItem.Id';"
                 style="cursor: pointer;">

                <!-- Dropdown Menu (Top-Right) -->
                <div class="dropdown position-absolute top-0 end-0 m-2">
                    <button class="btn btn-light bg-white clr-text border-0 dropdown-toggle-split"
                            type="button"
                            data-bs-toggle="dropdown"
                            data-bs-popper="static"
                            aria-expanded="false"
                            onclick="event.stopPropagation();">
                        <i class="fa-solid fa-ellipsis-vertical clr-text"></i>
                    </button>
                    <ul class="dropdown-menu show-on-top">
                        <li><a class="dropdown-item clr-text" asp-page="./Edit" asp-route-id="@eventItem.Id"><i class="fa-solid fa-pen"></i> Edit</a></li>
                        <li><a class="dropdown-item clr-text" asp-page="./EventAnalytics" asp-route-eventId="@eventItem.Id"><i class="fa-solid fa-chart-line"></i> Analytics</a></li>
                        <li><a class="dropdown-item clr-text" asp-page="./Attendees" asp-route-eventId="@eventItem.Id"><i class="fa-solid fa-users"></i> Attendees</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <button class="dropdown-item text-danger" onclick="event.stopPropagation(); showDeleteModal(@eventItem.Id, '@eventItem.Title')">
                                <i class="fa-solid fa-trash"></i> Delete
                            </button>
                        </li>
                    </ul>
                </div>

                <!-- Event Image (Left Side) -->
                <div class="event-img-wrapper flex-shrink-0">
                    <img src="@(eventItem.EventImage != null ? "data:image/jpeg;base64," + Convert.ToBase64String(eventItem.EventImage) : "/images/default-image.jpg")"
                         class="event-img"
                         alt="Event Image">
                </div>

                <!-- Event Details (Right Side, Bottom-Aligned) -->
                <div class="card-body d-flex flex-column justify-content-between w-100">
                    <div>
                        <h5 class="card-title">@eventItem.Title</h5>
                        <p class="text-muted">@eventItem.Category</p>
                        <p><i class="fa-solid fa-calendar"></i> @eventItem.EventDate.ToString("yyyy-MM-dd HH:mm")</p>
                        <p><i class="fa-solid fa-map-marker-alt"></i> @eventItem.Location</p>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this event?</p>
            </div>
            <div class="modal-footer">
                <button id="confirmDeleteButton" class="btn btn-danger">Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Pagination -->
<nav aria-label="Page navigation" class="mt-4">
    <ul class="pagination justify-content-center">
        <!-- Left Arrow (Previous Page) -->
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link"
               href="?CurrentPage=@(Model.CurrentPage - 1)&SearchTerm=@Model.SearchTerm&SelectedCategory=@Model.SelectedCategory&SelectedMode=@Model.SelectedMode&SearchDate=@Model.SearchDate?.ToString("yyyy-MM-dd")&SelectedTicketType=@Model.SelectedTicketType"
               aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        <!-- Page Numbers (Limited to 3) -->
        @{
            int startPage = Math.Max(1, Model.CurrentPage - 1);
            int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 1);

            // Adjust startPage and endPage to always show 3 pages if possible
            if (endPage - startPage < 2)
            {
                if (startPage == 1)
                {
                    endPage = Math.Min(3, Model.TotalPages);
                }
                else if (endPage == Model.TotalPages)
                {
                    startPage = Math.Max(1, Model.TotalPages - 2);
                }
            }

            for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       href="?CurrentPage=@i&SearchTerm=@Model.SearchTerm&SelectedCategory=@Model.SelectedCategory&SelectedMode=@Model.SelectedMode&SearchDate=@Model.SearchDate?.ToString("yyyy-MM-dd")&SelectedTicketType=@Model.SelectedTicketType">
                        @i
                    </a>
                </li>
            }
        }

        <!-- Right Arrow (Next Page) -->
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link"
               href="?CurrentPage=@(Model.CurrentPage + 1)&SearchTerm=@Model.SearchTerm&SelectedCategory=@Model.SelectedCategory&SelectedMode=@Model.SelectedMode&SearchDate=@Model.SearchDate?.ToString("yyyy-MM-dd")&SelectedTicketType=@Model.SelectedTicketType"
               aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this event?</p>
            </div>
            <div class="modal-footer">
                <button id="confirmDeleteButton" class="btn btn-danger">Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script>
    function toggleFilters() {
        const filterOptions = document.getElementById('filterOptions');
        filterOptions.style.display = filterOptions.style.display === 'none' ? 'block' : 'none';
    }

    function resetFilters() {
        document.getElementById('eventMode').value = '';
        document.getElementById('ticketType').value = '';
        document.querySelector('form').submit();
    }

    let eventIdToDelete = null;

    function showDeleteModal(eventId) {
        eventIdToDelete = eventId;
        $("#deleteModal").modal("show");
    }

    document.getElementById("confirmDeleteButton").addEventListener("click", function () {
        if (eventIdToDelete) {
            fetch(`/Organizer/Events/Index?handler=Delete&id=${eventIdToDelete}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": document.querySelector("input[name='__RequestVerificationToken']").value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert("Error deleting the event.");
                }
            })
            .catch(error => console.error("Error:", error));
        }
    });
</script>