@page
@model EventManagement_Application.Pages.Organizer.Events.IndexModel
@{
    ViewData["Title"] = "Events";
}

<h1>Events</h1>

<form method="get">
    <div class="row">
        <div class="col-md-4">
            <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search by category or location">
        </div>

        <div class="col-md-3">
            <div class="input-group">
                <input type="date" name="SearchDate" value="@Model.SearchDate?.ToString("yyyy-MM-dd")" class="form-control">
                <span class="input-group-text" id="calendarIcon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>

        <!-- Filter Icon -->
        <div class="col-md-1 justify-content-center align-items-center">
            <button type="button" class="btn btn-outline-secondary d-flex p-1" onclick="toggleFilters()">
                <i class="fa-solid fa-filter px-1 mt-1"></i><h6 class="mt-1 px-1">Filter</h6>
            </button>
        </div>

        <div class="col-md-2">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>

        <!-- Filter Options (Initially Hidden) -->
        <div id="filterOptions" class="mt-3" style="display: none; padding: 15px; border: 1px solid #ddd; background-color: #f9f9f9;">
            <div class="form-group">
                <label for="ticketType">Ticket Type</label>
                <select id="ticketType" name="SelectedTicketType" class="form-control">
                    <option value="">Select Ticket Type</option>
                    @foreach (var ticketType in Model.TicketTypes)
                    {
                        <option value="@ticketType">@ticketType</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="eventMode">Event Mode</label>
                <select id="eventMode" name="SelectedMode" class="form-control">
                    <option value="">Select Event Mode</option>
                    <option value="Online">Online</option>
                    <option value="InPerson">In-person</option>
                </select>
            </div>

            <!-- Done and Cancel buttons -->
            <div class="form-group">
                <button type="submit" id="doneButton" class="btn btn-success" >Done</button>
                <button type="button" id="cancelButton" class="btn btn-danger" onclick="resetFilters()">Cancel</button>
            </div>
        </div>
    </div>
</form>


<hr />
<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Event Date</th>
            <th>Location</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var eventItem in Model.Events)
        {
            <tr>
                <td>@eventItem.Title</td>
                <td>@eventItem.Category</td>
                <td>@eventItem.EventDate.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@eventItem.Location</td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@eventItem.Id" class="btn btn-primary">Edit</a>
                    <a asp-page="./Details" asp-route-id="@eventItem.Id" class="btn btn-primary">Details</a>
                    <a asp-page="./EventAnalytics" asp-route-eventId="@eventItem.Id" class="btn btn-primary">Analytics</a>
                    <a asp-page="./Attendees" asp-route-eventId="@eventItem.Id" class="btn btn-primary">Attendees</a>
                    <button class="btn btn-danger" onclick="showDeleteModal(@eventItem.Id, '@eventItem.Title')">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Hidden input for event ID -->
<input type="hidden" id="eventIdToDelete">

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="close border-0 bg-transparent" data-dismiss="modal" aria-label="Close">&times;</button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this event?</p>
            </div>
            <div class="modal-footer">
                <button id="confirmDeleteButton" class="btn btn-danger">Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<a asp-page="./Create" class="btn btn-success">Create New Event</a>

<script>
    document.getElementById("calendarIcon").addEventListener("click", function() {
        document.getElementById("datePicker").showPicker();
    });

     function toggleFilters() {
        const filterOptions = document.getElementById('filterOptions');
        filterOptions.style.display = filterOptions.style.display === 'none' ? 'block' : 'none';
    }

    // Reset filters to default state (Cancel action)
    function resetFilters() {
        document.getElementById('eventMode').value = '';
        document.getElementById('ticketType').value = '';

        // Reset the URL (remove query params) to show all events
        history.pushState(null, "", window.location.pathname);
    }

    let eventIdToDelete = null;

    function showDeleteModal(eventId) {
        eventIdToDelete = eventId;
        $("#deleteModal").modal("show");
    }

    document.getElementById("confirmDeleteButton").addEventListener("click", function () {
        if (eventIdToDelete) {
            fetch(`/Organizer/Events/Index?handler=Delete&id=${eventIdToDelete}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": document.querySelector("input[name='__RequestVerificationToken']").value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert("Error deleting the event.");
                }
            })
            .catch(error => console.error("Error:", error));
        }
    });
    // close delete confirmation
    document.querySelector(".close").addEventListener("click", function () {
        $("#deleteModal").modal("hide");
    });
</script>